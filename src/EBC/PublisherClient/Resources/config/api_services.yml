name: Publisher Client
baseUrl: "{scheme}://{host}{+basePath}/{publisherId}"
description: Publisher Client
operations:
    getCampaign:
        httpMethod: GET
        uri: campaigns/{campaignId}
        responseClass: 'EBC\PublisherClient\Campaign\Campaign'
        summary: Returns one campaign
        data:
            acceptedStatusCodes: 200
        parameters:
            campaignId:
                location: uri
                description: Id of the campaign to use
                type: integer
                required: true

    getCampaignCreativities:
        httpMethod: GET
        uri: campaigns/{campaignId}/creativities
        responseClass: 'EBC\PublisherClient\Campaign\Creativities'
        summary: Returns the creativity for one campaign
        data:
            acceptedStatusCodes: 200
        parameters:
            campaignId:
                location: uri
                description: Id of the campaign to use
                type: integer
                required: true

    getCampaigns:
        httpMethod: GET
        uri: campaigns
        responseClass: 'EBC\PublisherClient\Campaign\Campaigns'
        summary: Returns campaigns that publisher have access
        data:
            acceptedStatusCodes: 200
        parameters:
            orderBy:
                location: query
                description: How to order the result set (created|updated)
                type: string
                minLength: 2
                maxLength: 64
                required: false
                sentAs: order_by
            order:
                location: query
                description: Order asc|desc|ASC|DESC
                type: string
                minLength: 3
                maxLength: 4
                required: false
            endDateGreaterThan:
                location: query
                description: End date for campaign greater than (YYYY-MM-DD)
                type: string
                minLength: 10
                maxLength: 10
                required: false
            country:
                location: query
                description: Campaigns' country
                type: integer
                required: false
            category:
                location: query
                description: Campaigns' category
                type: integer
                required: false
            limit:
                location: query
                description: Number of campaigns to get
                type: integer
                required: false
    getCampaignListApproval:
        httpMethod: GET
        uri: campaigns/{campaignId}/lists/{listExternalId}
        responseClass: 'EBC\PublisherClient\Campaign\Approval'
        summary: Returns approval of a campaign for a list
        data:
            acceptedStatusCodes: 200
        parameters:
            campaignId:
                location: uri
                description: id of the campaign
                type: integer
                required: true
            listExternalId:
                location: uri
                description: external Id of the list
                type: string
                required: true
    getLists:
        httpMethod: GET
        uri: lists
        responseClass: 'EBC\PublisherClient\ListDefinition\ListsDefinition'
        summary: Returns publisher lists
        data:
            acceptedStatusCodes: 200
    getListByExternalIdAndPublisherAction:
        httpMethod: GET
        uri: lists/{externalId}
        responseClass: 'EBC\PublisherClient\ListDefinition\ListDefinition'
        summary: Returns a list of a publisher by its external id
        data:
            acceptedStatusCodes: 200
        parameters:
            externalId:
                location: uri
                description: external Id of the list to get
                type: string
                required: true
    updateListByPublisher:
        httpMethod: PATCH
        uri: lists/{externalId}
        responseClass: 'EBC\PublisherClient\ListDefinition\ListDefinition'
        summary: Update a list by a publisher
        data:
            acceptedStatusCodes: 202
        parameters:
            externalId:
                location: uri
                description: The list external Id
                type: string
                minLength: 1
                required: true
            list_definition_update:
                location: json
                description: The form of credential
                type: object
                required: true
                properties:
                    externalId:
                        location: json
                        required: true
                        type: string
                    name:
                        location: json
                        required: false
                        type: string
                    approved:
                        location: json
                        required: false
                        type: string
                    rejected:
                        location: json
                        required: false
                        type: string
